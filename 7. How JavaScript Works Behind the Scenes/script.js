/*
JavaScript JavaScript is a :
ðŸ”¥High Level , 
ðŸ”¥Prototype-based, Object-oriented,
ðŸ”¥Multi-paradigm
ðŸ”¥Interpreted
ðŸ”¥Just-in-time compiled
ðŸ”¥Dynamic
ðŸ”¥Single-threaded
ðŸ”¥Garbage-Collected
ðŸ”¥First-class functions 
ðŸ”¥Non-blocking event loop concurrency model
programming language...

ðŸ”¥High Level
Any computer program needs resources : 
(Low-Level) programming language developer has to manage resources manually
(High Level)  developer hasn't to manage resources manually every thing happens automatically

ðŸ”¥Garbage-Collected
Cleaning the memory so we don't have to

ðŸ”¥Interpreted or Just-in-time compiled
Convert to machine code === Compiling

ðŸ”¥Multi-paradigm
ðŸ‘‰Paradigm : An approach and mindset of structuring code, 
which will direct your coding style and technique

1.Percedual programming 
2.Object-oriented programming (OOP)
3.Functional Programming (FP)

classify paradigm : Imperative vs Declarative

ðŸ”¥Prototype-based, Object-oriented,

Prototype => Built from prototype <= Inherits methods from prototype

ðŸ”¥First-class functions 
ðŸ‘‰In a language with *first-class functions*, functions are simply *treated as variables* .
We can pass them into other functions , and return them from functions.

ðŸ”¥Dynamic
Dynamically-typed language :
ðŸ‘‰No data type definitions , Types becomes known at runtime let x = 23; let y = 18;

ðŸ‘‰Data type of variable is automatically changed x = "Shoxrux"   

ðŸ”¥Non-blocking event loop concurrency model && ðŸ”¥Single-threaded

ðŸ‘‰Concurrency model : how the JavaScript engine handles multiple tasks happening at the same time
ðŸ‘‰JavaScript runs in one single thread, so it can only do one thing at a time
ðŸ‘‰Sounds like it would block the single thread . However, we want non-blocking behaviour
ðŸ‘‰By using an event loop:takes long running tasks, executed them in the "background" , 
and puth them back in the main thread once they are finished. 
*/
